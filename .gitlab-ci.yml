image:
  name: hashicorp/terraform:0.12.21
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

stages:
  - Test and Lint
  - Build and Push
  - Homolog Plan
  - Homolog Apply
  - Prod Plan
  - Prod Apply
  - Destroy

Test and Lint:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  stage: Test and Lint
  script:
    - echo "====Testa app e verifica formatacoes===="
    - apk add --update docker-compose
    - docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test && flake8"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(master|production)$/ || $CI_COMMIT_BRANCH =~ /^(master|production)$/'

Validate Terraform:
  stage: Test and Lint
  script:
    - echo "====Faz validacoes do Terraform===="
    - cd deploy/
    - terraform init -backend=false
    - terraform validate
    - terraform fmt -check
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(master|production)$/ || $CI_COMMIT_BRANCH =~ /^(master|production)$/'

Build and Push:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  stage: Build and Push
  script:
    - echo "====Constroi e entrega imagem docker===="
    - apk add python3
    - pip3 install awscli
    - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker push $ECR_REPO:$CI_COMMIT_SHORT_SHA
    - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:latest
    - docker push $ECR_REPO:latest
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Homolog Plan:
  stage: Homolog Plan
  script:
    - echo "====Planeja infra (Terraform) para ambiente de Homologacao===="
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Homolog Apply:
  stage: Homolog Apply
  script:
    - echo "====xecuta infra (Terraform) para ambiente de Homologacao===="
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Prod Plan:
  stage: Prod Plan
  script:
    - echo "====Planeja infra (Terraform) para ambiente de Producao===="
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'

Prod Apply:
  stage: Prod Apply
  script:
    - echo "====Executa infra (Terraform) para ambiente de Producao===="
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual

Staging Destroy:
  stage: Destroy
  script:
    - echo "====Destroi infra (Terraform) de Homologacao===="
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'
      when: manual

Production Destroy:
  stage: Destroy
  script:
    - echo "====Destroi infra (Terraform) de Producao===="
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual
